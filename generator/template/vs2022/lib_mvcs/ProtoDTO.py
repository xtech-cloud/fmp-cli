import os
from typing import Dict, List, Tuple
from generator.template.utility import writer

template = """
//*************************************************************************************
//   !!! Generated by the fmp-cli.  DO NOT EDIT!
//*************************************************************************************

using {{org}}.FMP.MOD.{{module}}.LIB.Proto;
using {{org}}.FMP.MOD.{{module}}.LIB.Bridge;

namespace {{org}}.FMP.MOD.{{module}}.LIB.MVCS
{
{{message_blocks}}
}
"""

template_message = """
    public class {{message}}DTO : IDTO
    {
        public {{message}}DTO({{message}} _message)
        {
            message = _message;    
        }
        public readonly {{message}} message;
    }
"""


def generate(
    _orgname: str,
    _modulename: str,
    _outputdir: str,
    _enums: List[str],
    _services: Dict[str, Dict[str, Tuple]],
    _messages: Dict[str, List[Tuple]],
):
    message_blocks = ""
    # 遍历所有消息
    for message_name in _messages.keys():
        # 遍历所有字段
        for field in _messages[message_name]:
            # 字段名
            field_name = field[0]
            # 字段类型
            field_type = field[1]
        message_block = template_message.replace("{{message}}", message_name)
        message_blocks = message_blocks + message_block + "\n\n"

    # 生成项目文件
    contents = (
        template.replace("{{org}}", _orgname)
        .replace("{{module}}", _modulename)
        .replace("{{message_blocks}}", message_blocks)
    )
    filepath = os.path.join(_outputdir, "ProtoDTO.cs")
    writer.write(filepath, contents, True)
