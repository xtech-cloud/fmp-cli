import os
from typing import Dict, List, Tuple
from generator.template.utility import writer

template = """
<!--
*************************************************************************************
   !!! Generated by the fmp-cli.  DO NOT EDIT!
*************************************************************************************
-->

<Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="new[] { {{type_blocks}} }">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(BasicLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(BasicLayout)">
            <p>Not found</p>
        </LayoutView>
    </NotFound>
</Router>
<AntContainer />
"""

template_type = "typeof({{org}}.FMP.MOD.{{module}}.LIB.Razor.{{service}}Component).Assembly,"

def generate(_options, _outputdir: str):
    org_name = _options["org_name"]
    module_name = _options["module_name"]
    services = _options["services"]

    type_blocks = ""
    for service in services.keys():
        type_blocks = type_blocks + template_type.replace("{{org}}", org_name).replace("{{module}}", module_name).replace("{{service}}", service)
    contents = (
        template.replace("{{org}}", org_name)
        .replace("{{module}}", module_name)
        .replace("{{type_blocks}}", type_blocks)
    )
    filepath = os.path.join(_outputdir, "App.razor")
    writer.write(filepath, contents, True)
